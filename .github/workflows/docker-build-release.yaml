name: docker-build-release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths-ignore:
      - 'README.md'
      - 'DOCKER.md'
      - 'LICENSE'
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.OSS_GITHUB_TOKEN }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: false
          gpg_private_key: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.CI_GPG_PASSPHARSE }}

      - name: Project context
        id: context
        uses: zero88/gh-project-context@v1.2
        with:
          mustSign: true
          nextVerMode: PATCH
          patterns: ghrd.m4::(VERSION=)(.+)::1

      - name: Query dynamic properties
        id: dynamic_prop
        shell: bash
        if: ${{ steps.context.outputs.decision_build == 'true' }}
        run: |
          argbashVersion=$(cat argbash.txt)
          images=ghcr.io/zero88/ghrd
          [[ "${{ steps.context.outputs.isTag }}" == "true" ]] && images=$images,zero88/ghrd
          echo images=$images >> $GITHUB_OUTPUT
          echo argbashVersion=$argbashVersion >> $GITHUB_OUTPUT

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        if: ${{ steps.context.outputs.decision_build == 'true' }}
        with:
          images: ${{ steps.dynamic_prop.outputs.images }}
          flavor: |
            latest=auto
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: ${{ steps.context.outputs.decision_build == 'true' }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: ${{ steps.context.outputs.isTag == 'true' }}
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.OSS_GHA_DOCKER_HUB }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: ${{ steps.context.outputs.decision_build == 'true' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.OSS_GITHUB_TOKEN }}

      - name: Docker build
        uses: docker/build-push-action@v4
        if: ${{ steps.context.outputs.decision_build == 'true' }}
        with:
          context: .
          file: Dockerfile
          build-args: |
            ARGBASH_VERSION=${{ steps.dynamic_prop.outputs.argbashVersion }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: ${{ steps.context.outputs.decision_build }}

      - name: Copy artifact
        shell: bash
        if: ${{ steps.context.outputs.decision_build == 'true' }}
        run: |
          docker create --name ghrd ghcr.io/zero88/ghrd:${{ env.DOCKER_METADATA_OUTPUT_VERSION }}
          docker cp ghrd:/app/ghrd /tmp/ghrd
          docker rm -f ghrd

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: ${{ steps.context.outputs.decision_build == 'true' }}
        with:
          name: ghrd
          path: /tmp/ghrd

      - name: Create Release
        if: ${{ steps.context.outputs.isTag == 'true' }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.context.outputs.version }}
          name: Release v${{ steps.context.outputs.version }}
          draft: false
          prerelease: false
          files: /tmp/ghrd
